nodejs提供本地人脸服务restful api，在浏览器中可用ajax调用（均采用post/json格式）

1、文字转语音服务
post本地服务，比如http://localhost:12345, 
url: /speak
json:
{
	"words":"你好，世界"
} 

2、通过图片获取人脸特征
post本地服务，比如http://localhost:12345, 
url: /get_face_trait
json:
{
	"img": "图片的DataURL"
} 
返回：
{
	ret: 0, //成功，-1失败
	msg: "", //失败的原因
	count: 1, //图片中的人脸个数
	trait: "hex string" //成功时的特征值，一个16进制字符串，应用可存数据库中以便以后比较
}

3、根据人脸特征比较是否为同一人
url: /cmp_face_by_traits
json:
{
	"trait1": "人脸特征，比如上面接口返回的",
	"trait2": "另一人的人脸特征"
} 
返回：
{
	ret: 0, //成功，-1失败
	msg: "", //失败的原因
	diff: 0.432 //浮点数，人脸相差度，小于0.5可认为是同一人。上层应用可以根据需求更改这个阀值
}

4、根据图片和人脸特征比较是否为同一人
url: /cmp_face_by_trait_and_img
json:
{
	"trait": "人脸特征",
	"img": "包含另一个人脸的图片
} 
返回：
{
	ret: 0, //成功，-1失败
	msg: "", //失败的原因，可能是非法的图片格式，也可能是图片中包含多个人脸
	count: 2, //图片中的人脸个数
	diff: 0.432 //浮点数，人脸相差度，小于0.5可认为是同一人。上层应用可以根据需求更改这个阀值
}

5、根据两张图片比较是否为同一人
url: /cmp_face_by_imgs
json:
{
	"img1": "包含人脸的图片",
	"img2": "包含另一个人脸的图片
} 
返回：
{
	ret: 0, //成功，-1失败
	msg: "", //失败的原因，可能是非法的图片格式，也可能是图片中包含多个人脸
	count1: 1, //图片1中包含的人脸个数
	count2: 2, //图片2中包含的人脸个数
	diff: 0.432 //浮点数，人脸相差度，小于0.5可认为是同一人。上层应用可以根据需求更改这个阀值
}

注：通过图片做人脸比较，图片中的人脸个数必须为1，如果包含多个人脸或0个人脸，会返回失败，并带回人脸个数
代码具体使用请参考demo中public目录下的js文件
